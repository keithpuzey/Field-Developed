
import groovy.json.JsonSlurper

//  Blazemeter Environment - Workspace / Account
def workspaceID = 348607
def account = 352831

// Blazemeter Mock Service Details
def ServiceID = "144952"
def MockThinkTime = "0"

// Blazemeter Tests - Performance Test ID / Functional Test ID / Functional Test Suite ID
def BMTestID = 10987127
def BMfunctest = 11379990
def BMfuncsuitetest = 10137037

	
pipeline {
   agent any
   stages {
      stage('Development') {
         steps {
        echo 'Extract Build to Develpoment Environment'
        echo 'Prepare Environment - Create Mock Services'
        sh "sed  -i 's/BUILDNUMBER/${BUILD_NUMBER}/g' /var/jenkins_home/workspace/Digital_Bank_Demo_WebSite_v2/demowebsite/finance-original-demo2/index.html"
	    sh "sed  -i 's/BUILDNUMBER/${BUILD_NUMBER}/g' /var/jenkins_home/workspace/Digital_Bank_Demo_WebSite_v2/demowebsite/finance-original-demo2/contact.html"
	    sh "sed  -i 's/BUILDNUMBER/${BUILD_NUMBER}/g' /var/jenkins_home/workspace/Digital_Bank_Demo_WebSite_v2/demowebsite/finance-original-demo2/about.html"
	    sh "/bin/cp -r /home/perfecto/perfecto-test-backup-demo2.sh /home/perfecto/perfecto-test.sh"
	    sh "sed  -i 's/BUILD_NUMBER/${BUILD_NUMBER}/g' /home/perfecto/perfecto-test.sh"
		
  	    sshagent(['website']) {
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'whoami'"
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'mkdir /tmp/www'"
		 sh "scp -r /var/jenkins_home/workspace/Digital_Bank_Demo_WebSite_v2/demowebsite/finance-original-demo2/* kpuzey@10.128.0.81:/tmp/www "
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'sudo cp -r /tmp/www/* /var/www/html/'"
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'rm -r -f /tmp/www'"
		 sh "'/home/perfecto/perfecto-test.sh'"
	//	 junit skipPublishingChecks: true, testResults: "demowebsite/testresults/${BUILD_NUMBER}-report.xml"
	//	 junit "demowebsite/testresults/${BUILD_NUMBER}-report.xml"
             }
 	   echo "Deploy Digital Bank Build" + BUILD_NUMBER + "  to Test Environment"
	   sleep 5

           script {
            // Define Variable
             def USER_INPUT = input(
                    message: 'Deployment Paused                ', // + testresult,
                    parameters: [
                            [$class: 'ChoiceParameterDefinition',
                             choices: ['Yes','No'].join('\n'),
                             name: 'input',
                             description: 'Do you want to proceed?']
                    ])

            echo "The answer is: ${USER_INPUT}"

            if( "${USER_INPUT}" == "Yes"){
            echo "Deployment Continuing"
            } else {
	    echo "Deployment Cancelled by user input"
       	   script {

	    // Delete Mock Service
		   
            echo "Reverting website"
	    sshagent(['website']) {
                 // some block
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'mkdir /tmp/www'"
		 sh "scp -r /var/jenkins_home/workspace/Digital_Bank_Demo_WebSite_v2/demowebsite/finance-original/* kpuzey@10.128.0.81:/tmp/www "
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'sudo cp -r /tmp/www/* /var/www/html/'"
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'rm -r -f /tmp/www'"
		 sh "'/home/perfecto/perfecto-test.sh'"
             }
          }
            break
            }
        }
	   script {
            echo "Reverting website"
	    sshagent(['website']) {

		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'mkdir /tmp/www'"
		 sh "scp -r /var/jenkins_home/workspace/Digital_Bank_Demo_WebSite_v2/demowebsite/finance-original/* kpuzey@10.128.0.81:/tmp/www "
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'sudo cp -r /tmp/www/* /var/www/html/'"
		 sh "ssh -o StrictHostKeyChecking=no -l kpuzey 10.128.0.81 'rm -r -f /tmp/www'"
		 sh "'/home/perfecto/perfecto-test.sh'"
	    }
            }
           }
          }
         stage('QA') {
         steps {
            echo 'Deploy Build to QA Environment'
         }
      }
	stage('UAT') {
         steps {
            echo 'Deploy Build to QA Environment'
         }
      }
     }
 }

